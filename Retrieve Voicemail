//Initialize variables
var r;
var response;
var responseBody;
var httpStatus = 200; // Assuming positive response on API calls for simulation
var message;

/*
 * Obtain Authorization Token
 * 
 * Utilize the Auth API to get a JSON Web Token
 * @output: 'token' variable with new token value.
 */

// 'Faking' the RingCentral Response - this format is from the RingCentral
// documentation and would come through like this.
var authResponse = workflow.scratchpad.authResponse;
try {
	r = new sn_ws.RESTMessageV2('RingCentral', 'Auth Token');
	response = r.execute();
	responseBody = response.getBody();
	//httpStatus = response.getStatusCode();
} catch (ex) {
	message = ex.message;
	activity.output = 'error';
	current.work_notes = message;
}
if (httpStatus == 200) {
	//var token = responseBody.access_token;
	var token = authResponse.access_token;
} else {
	activity.output = 'error';
}

/*
 * Retrieve list of voicemails from RingCentral
 * 
 * @output: 'voicemail_ID' variable, with the specific ID
 * of the voicemail to retrieve.
 */

// Simulated response from RingCentral:
var listMessagesResponse = workflow.scratchpad.listMessagesResponse;
if (token) {
	try {
		r = new sn_ws.RESTMessageV2('RingCentral', 'ListMessages');
		r.setStringParameterNoEscape('acount_id', '790154005');
		r.setStringParameterNoEscape('extension_id', '101');
		response = r.execute();
		responseBody = response.getBody();
		//httpStatus = response.getStatusCode();
	} catch (ex) {
		message = ex.message;
		activity.output = 'error';
		current.work_notes = message;
	}
	if (httpStatus == 200) {
		//var voicemailID = responseBody.records[0].id;
		var voicemail_ID = listMessagesResponse.records[0].id;
		workflow.scratchpad.voicemail_ID = voicemail_ID;
	} else {
		activity.output = 'error';
	}
}

/*
 * Get binary Message Content from RingCentral
 * 
 * @output: 'vmBinary' variable with binary data of
 * voicemail message mp3.
 */

// Simulated response from RingCentral:
var messageContent = workflow.scratchpad.messageContent;
if (voicemail_ID) {
	try {
		r = new sn_ws.RESTMessageV2('RingCentral', 'Get Message Content');
		r.setStringParameterNoEscape('accountId', '790154005');
		r.setStringParameterNoEscape('attachmentId', voicemail_ID);
		r.setStringParameterNoEscape('messageId', voicemail_ID);
		response = r.execute();
		responseBody = response.getBody();
		//httpStatus = response.getStatusCode();
	} catch (ex) {
		message = ex.message;
		activity.output = 'error';
		current.work_notes = message;
	}
	if (httpStatus == 200) {
		//var vmBinary = responseBody;
		var vmBinary = messageContent;
		activity.output = 'success';
		workflow.scratchpad.vmBinary = vmBinary;
	} else {
		activity.output = 'error';
	}
}
